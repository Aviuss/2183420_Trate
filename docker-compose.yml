services:
  reverse-proxy:
    image: nginx:latest
    container_name: reverse-proxy
    ports:
      - "80:80"
    volumes:
      - ./containers/reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
      - auth
    networks:
      - reverse-proxy-network
  
  
  auth:
    build: ./containers/auth
    container_name: auth
    env_file: .env
    ports:
      - "1000:${AUTH_SERVER_PORT}"
    networks:
      - reverse-proxy-network
    depends_on:
      auth-postgresdb:
        condition: service_healthy
  
  auth-postgresdb:
    build: ./containers/auth-postgresdb
    container_name: auth-postgresdb
    ports:
      - ${AUTH_POSTGRESDB_PORT}:${AUTH_POSTGRESDB_PORT}
    volumes:
      - auth-postgresdb-volume:/var/lib/postgresql/data
    command: "-p ${AUTH_POSTGRESDB_PORT}"
    networks:
      - reverse-proxy-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
    environment:
    - POSTGRES_USER=${AUTH_POSTGRESDB_USER}
    - POSTGRES_PASSWORD=${AUTH_POSTGRESDB_PASSWORD}
    - POSTGRES_DB=${AUTH_POSTGRESDB_DB}
  
  
  app:
    build: ./containers/app
    container_name: app
    ports:
      - "5000:3001"
    networks:
      - reverse-proxy-network



networks:
  reverse-proxy-network:
    name: reverse-proxy-network


volumes:
  auth-postgresdb-volume:
    name: auth-postgresdb-volume